{
    "swagger": "2.0",
    "info": {
        "title": "courageousteams2",
        "version": "1.0.0",
        "contact": {
            "email": "courageousteams-no-reply@bubbleapps.io"
        }
    },
    "host": "courageousteams.bubbleapps.io",
    "basePath": "/version-test/api/1.1",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "paths": {
        "/wf/createTeamMembers": {
            "post": {
                "description": "Triggers the workflow createTeamMembers",
                "parameters": [{
                    "name": "createTeamMembers request body",
                    "in": "body",
                    "description": "Body of the POST request",
                    "schema": {
                        "$ref": "#/definitions/createTeamMembersBody"
                    }
                }],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/orderEnded": {
            "post": {
                "description": "Triggers the workflow orderEnded",
                "parameters": [{
                    "name": "orderEnded request body",
                    "in": "body",
                    "description": "Body of the POST request",
                    "schema": {
                        "$ref": "#/definitions/orderEndedBody"
                    }
                }],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "Company": {
                                            "type": "string",
                                            "description": "company ('company' represented by a unique ID)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/SendEmailReminder": {
            "post": {
                "description": "Triggers the workflow SendEmailReminder",
                "parameters": [{
                    "name": "SendEmailReminder request body",
                    "in": "body",
                    "description": "Body of the POST request",
                    "schema": {
                        "$ref": "#/definitions/SendEmailReminderBody"
                    }
                }],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/team/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type team by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "UniqueID",
                    "in": "path",
                    "description": "Unique ID of the team to retrieve",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Retrieved team",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/team"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type team by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the team to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "team request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/teamBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified team"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type team by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the team to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "team request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/teamBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced team"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type team by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "UniqueID",
                    "in": "path",
                    "description": "Unique ID of the team to delete",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "204": {
                        "description": "Replaced team"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/team": {
            "get": {
                "description": "Retrieve a list of things of type team with some optional search constraints. Retreives 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://bubble.io/reference#API.get_api.search_call.search_constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of teams",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/team"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type team",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "team request body",
                    "in": "body",
                    "description": "Body of the POST request",
                    "schema": {
                        "$ref": "#/definitions/teamBody"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created one thing of type team",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "Success status of the operation"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Unique id of the newly created object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/user/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type user by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "UniqueID",
                    "in": "path",
                    "description": "Unique ID of the user to retrieve",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Retrieved user",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/user"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type user by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the user to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "user request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/userBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified user"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type user by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the user to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "user request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/userBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced user"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type user by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "UniqueID",
                    "in": "path",
                    "description": "Unique ID of the user to delete",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "204": {
                        "description": "Replaced user"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/user": {
            "get": {
                "description": "Retrieve a list of things of type user with some optional search constraints. Retreives 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://bubble.io/reference#API.get_api.search_call.search_constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of users",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/user"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type user",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "user request body",
                    "in": "body",
                    "description": "Body of the POST request",
                    "schema": {
                        "$ref": "#/definitions/userBody"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created one thing of type user",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "Success status of the operation"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Unique id of the newly created object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/order/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type order by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "UniqueID",
                    "in": "path",
                    "description": "Unique ID of the order to retrieve",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Retrieved order",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type order by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the order to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "order request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/orderBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified order"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type order by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the order to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "order request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/orderBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced order"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type order by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "UniqueID",
                    "in": "path",
                    "description": "Unique ID of the order to delete",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "204": {
                        "description": "Replaced order"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/order": {
            "get": {
                "description": "Retrieve a list of things of type order with some optional search constraints. Retreives 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://bubble.io/reference#API.get_api.search_call.search_constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of orders",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/order"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type order",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "order request body",
                    "in": "body",
                    "description": "Body of the POST request",
                    "schema": {
                        "$ref": "#/definitions/orderBody"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created one thing of type order",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "Success status of the operation"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Unique id of the newly created object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/company/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type company by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "UniqueID",
                    "in": "path",
                    "description": "Unique ID of the company to retrieve",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Retrieved company",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/company"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type company by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the company to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "company request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/companyBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified company"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type company by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the company to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "company request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/companyBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced company"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type company by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "UniqueID",
                    "in": "path",
                    "description": "Unique ID of the company to delete",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "204": {
                        "description": "Replaced company"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/company": {
            "get": {
                "description": "Retrieve a list of things of type company with some optional search constraints. Retreives 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://bubble.io/reference#API.get_api.search_call.search_constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of companys",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/company"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type company",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "company request body",
                    "in": "body",
                    "description": "Body of the POST request",
                    "schema": {
                        "$ref": "#/definitions/companyBody"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created one thing of type company",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "Success status of the operation"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Unique id of the newly created object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/teammember/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type teammember by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "UniqueID",
                    "in": "path",
                    "description": "Unique ID of the teammember to retrieve",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Retrieved teammember",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/teammember"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type teammember by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the teammember to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "teammember request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/teammemberBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified teammember"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type teammember by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the teammember to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "teammember request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/teammemberBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced teammember"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type teammember by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "UniqueID",
                    "in": "path",
                    "description": "Unique ID of the teammember to delete",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "204": {
                        "description": "Replaced teammember"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/teammember": {
            "get": {
                "description": "Retrieve a list of things of type teammember with some optional search constraints. Retreives 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://bubble.io/reference#API.get_api.search_call.search_constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of teammembers",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/teammember"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type teammember",
                "tags": [
                    "Data"
                ],
                "parameters": [{
                    "name": "teammember request body",
                    "in": "body",
                    "description": "Body of the POST request",
                    "schema": {
                        "$ref": "#/definitions/teammemberBody"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created one thing of type teammember",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "Success status of the operation"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Unique id of the newly created object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/bug_report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "team": {
            "type": "object",
            "properties": {
                "CompanyData": {
                    "type": "string",
                    "description": "'CompanyData' field of the current Team ('company' represented by a unique ID)"
                },
                "emailTextList": {
                    "type": "array",
                    "description": "'emailTextList' field of the current Team",
                    "items": {
                        "type": "string"
                    }
                },
                "Number Of Members": {
                    "type": "number",
                    "format": "float",
                    "description": "'Number Of Members' field of the current Team"
                },
                "Team Member_DataList": {
                    "type": "array",
                    "description": "'Team Member_DataList' field of the current Team",
                    "items": {
                        "type": "string",
                        "description": "teammember ('teammember' represented by a unique ID)"
                    }
                },
                "Team Order": {
                    "type": "number",
                    "format": "float",
                    "description": "'Team Order' field of the current Team"
                },
                "TeamReference": {
                    "type": "string",
                    "description": "'TeamReference' field of the current Team"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date",
                    "description": "'Created Date' field of the current Team"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date",
                    "description": "'Modified Date' field of the current Team"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Team ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Team"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Team"
                }
            }
        },
        "user": {
            "type": "object",
            "properties": {
                "Created Date": {
                    "type": "string",
                    "format": "date",
                    "description": "'Created Date' field of the current User"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date",
                    "description": "'Modified Date' field of the current User"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current User"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current User"
                },
                "authentication": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "email_confirmed": {
                                    "type": "boolean",
                                    "description": "Email confirmed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "order": {
            "type": "object",
            "properties": {
                "aCompanyContactName": {
                    "type": "string",
                    "description": "'aCompanyContactName' field of the current Order"
                },
                "aCompanyEmail": {
                    "type": "string",
                    "description": "'aCompanyEmail' field of the current Order"
                },
                "bNumberOfTeamMembers": {
                    "type": "number",
                    "format": "float",
                    "description": "'bNumberOfTeamMembers' field of the current Order"
                },
                "bTeamEmaiList": {
                    "type": "array",
                    "description": "'bTeamEmaiList' field of the current Order",
                    "items": {
                        "type": "string"
                    }
                },
                "aCompany Name": {
                    "type": "string",
                    "description": "'aCompany Name' field of the current Order"
                },
                "wCompany_Data": {
                    "type": "string",
                    "description": "'wCompany_Data' field of the current Order ('company' represented by a unique ID)"
                },
                "cLegal Confirmation Provided?": {
                    "type": "boolean",
                    "description": "'cLegal Confirmation Provided?' field of the current Order"
                },
                "cLegal Provide Email Address": {
                    "type": "string",
                    "description": "'cLegal Provide Email Address' field of the current Order"
                },
                "dPayment Provide Email Address": {
                    "type": "string",
                    "description": "'dPayment Provide Email Address' field of the current Order"
                },
                "dPayment Provided?": {
                    "type": "boolean",
                    "description": "'dPayment Provided?' field of the current Order"
                },
                "StripeChargeID": {
                    "type": "string",
                    "description": "'StripeChargeID' field of the current Order"
                },
                "wTeam_Data": {
                    "type": "string",
                    "description": "'wTeam_Data' field of the current Order ('team' represented by a unique ID)"
                },
                "bTeam Members Provided?": {
                    "type": "boolean",
                    "description": "'bTeam Members Provided?' field of the current Order"
                },
                "bTeam Provide Email Address": {
                    "type": "string",
                    "description": "'bTeam Provide Email Address' field of the current Order"
                },
                "wOrderReference": {
                    "type": "string",
                    "description": "'wOrderReference' field of the current Order"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date",
                    "description": "'Created Date' field of the current Order"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date",
                    "description": "'Modified Date' field of the current Order"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Order ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Order"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Order"
                }
            }
        },
        "company": {
            "type": "object",
            "properties": {
                "Company Email": {
                    "type": "string",
                    "description": "'Company Email' field of the current Company"
                },
                "Company Name": {
                    "type": "string",
                    "description": "'Company Name' field of the current Company"
                },
                "Company Number": {
                    "type": "string",
                    "description": "'Company Number' field of the current Company"
                },
                "Company Reference": {
                    "type": "string",
                    "description": "'Company Reference' field of the current Company"
                },
                "Contact Name": {
                    "type": "string",
                    "description": "'Contact Name' field of the current Company"
                },
                "Number Of Teams": {
                    "type": "number",
                    "format": "float",
                    "description": "'Number Of Teams' field of the current Company"
                },
                "TeamDataList": {
                    "type": "array",
                    "description": "'TeamDataList' field of the current Company",
                    "items": {
                        "type": "string",
                        "description": "team ('team' represented by a unique ID)"
                    }
                },
                "Created Date": {
                    "type": "string",
                    "format": "date",
                    "description": "'Created Date' field of the current Company"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date",
                    "description": "'Modified Date' field of the current Company"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Company ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Company"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Company"
                }
            }
        },
        "teammember": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string",
                    "description": "'Email' field of the current Team Member"
                },
                "Name": {
                    "type": "string",
                    "description": "'Name' field of the current Team Member"
                },
                "teamData": {
                    "type": "string",
                    "description": "'teamData' field of the current Team Member ('team' represented by a unique ID)"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date",
                    "description": "'Created Date' field of the current Team Member"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date",
                    "description": "'Modified Date' field of the current Team Member"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Team Member ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Team Member"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Team Member"
                }
            }
        },
        "createTeamMembersBody": {
            "type": "object",
            "properties": {
                "team": {
                    "type": "string",
                    "description": "team ('team' represented by a unique ID)"
                },
                "email": {
                    "type": "string"
                }
            },
            "required": [
                "team",
                "email"
            ]
        },
        "orderEndedBody": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "description": "order ('order' represented by a unique ID)"
                }
            },
            "required": [
                "order"
            ]
        },
        "SendEmailReminderBody": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "description": "order ('order' represented by a unique ID)"
                }
            },
            "required": [
                "order"
            ]
        },
        "teamBody": {
            "type": "object",
            "properties": {
                "CompanyData": {
                    "type": "string",
                    "description": "'CompanyData' field of the current Team ('company' represented by a unique ID)"
                },
                "emailTextList": {
                    "type": "array",
                    "description": "'emailTextList' field of the current Team",
                    "items": {
                        "type": "string"
                    }
                },
                "Number Of Members": {
                    "type": "number",
                    "format": "float",
                    "description": "'Number Of Members' field of the current Team"
                },
                "Team Member_DataList": {
                    "type": "array",
                    "description": "'Team Member_DataList' field of the current Team",
                    "items": {
                        "type": "string",
                        "description": "teammember ('teammember' represented by a unique ID)"
                    }
                },
                "Team Order": {
                    "type": "number",
                    "format": "float",
                    "description": "'Team Order' field of the current Team"
                },
                "TeamReference": {
                    "type": "string",
                    "description": "'TeamReference' field of the current Team"
                }
            }
        },
        "userBody": {
            "type": "object",
            "properties": {}
        },
        "orderBody": {
            "type": "object",
            "properties": {
                "aCompanyContactName": {
                    "type": "string",
                    "description": "'aCompanyContactName' field of the current Order"
                },
                "aCompanyEmail": {
                    "type": "string",
                    "description": "'aCompanyEmail' field of the current Order"
                },
                "bNumberOfTeamMembers": {
                    "type": "number",
                    "format": "float",
                    "description": "'bNumberOfTeamMembers' field of the current Order"
                },
                "bTeamEmaiList": {
                    "type": "array",
                    "description": "'bTeamEmaiList' field of the current Order",
                    "items": {
                        "type": "string"
                    }
                },
                "aCompany Name": {
                    "type": "string",
                    "description": "'aCompany Name' field of the current Order"
                },
                "wCompany_Data": {
                    "type": "string",
                    "description": "'wCompany_Data' field of the current Order ('company' represented by a unique ID)"
                },
                "cLegal Confirmation Provided?": {
                    "type": "boolean",
                    "description": "'cLegal Confirmation Provided?' field of the current Order"
                },
                "cLegal Provide Email Address": {
                    "type": "string",
                    "description": "'cLegal Provide Email Address' field of the current Order"
                },
                "dPayment Provide Email Address": {
                    "type": "string",
                    "description": "'dPayment Provide Email Address' field of the current Order"
                },
                "dPayment Provided?": {
                    "type": "boolean",
                    "description": "'dPayment Provided?' field of the current Order"
                },
                "StripeChargeID": {
                    "type": "string",
                    "description": "'StripeChargeID' field of the current Order"
                },
                "wTeam_Data": {
                    "type": "string",
                    "description": "'wTeam_Data' field of the current Order ('team' represented by a unique ID)"
                },
                "bTeam Members Provided?": {
                    "type": "boolean",
                    "description": "'bTeam Members Provided?' field of the current Order"
                },
                "bTeam Provide Email Address": {
                    "type": "string",
                    "description": "'bTeam Provide Email Address' field of the current Order"
                },
                "wOrderReference": {
                    "type": "string",
                    "description": "'wOrderReference' field of the current Order"
                }
            }
        },
        "companyBody": {
            "type": "object",
            "properties": {
                "Company Email": {
                    "type": "string",
                    "description": "'Company Email' field of the current Company"
                },
                "Company Name": {
                    "type": "string",
                    "description": "'Company Name' field of the current Company"
                },
                "Company Number": {
                    "type": "string",
                    "description": "'Company Number' field of the current Company"
                },
                "Company Reference": {
                    "type": "string",
                    "description": "'Company Reference' field of the current Company"
                },
                "Contact Name": {
                    "type": "string",
                    "description": "'Contact Name' field of the current Company"
                },
                "Number Of Teams": {
                    "type": "number",
                    "format": "float",
                    "description": "'Number Of Teams' field of the current Company"
                },
                "TeamDataList": {
                    "type": "array",
                    "description": "'TeamDataList' field of the current Company",
                    "items": {
                        "type": "string",
                        "description": "team ('team' represented by a unique ID)"
                    }
                }
            }
        },
        "teammemberBody": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string",
                    "description": "'Email' field of the current Team Member"
                },
                "Name": {
                    "type": "string",
                    "description": "'Name' field of the current Team Member"
                },
                "teamData": {
                    "type": "string",
                    "description": "'teamData' field of the current Team Member ('team' represented by a unique ID)"
                }
            }
        }
    },
    "tags": [{
            "name": "Workflow",
            "description": "Use this to trigger a workflow"
        },
        {
            "name": "Data",
            "description": "Use this to fetch, modify and delete data"
        }
    ],
    "securityDefinitions": {
        "api_token": {
            "type": "apiKey",
            "name": "api_token",
            "in": "query"
        }
    },
    "security": [{
        "api_token": []
    }]
}